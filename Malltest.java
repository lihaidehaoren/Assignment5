import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

public class Malltest {
    public static void main(String[] args){
        double tmpDouble;
        List<String> records;
        ShoppingMall m = new ConcreteShoppingMall();
        m.getMember("M76");
        m.addMember("M73 M 24 S");
        m.addMember("M32 M 11 S");
        m.addMember("M10 M 55 G");
        m.addMember("M83 F 42 G");
        m.addMember("M36 M 75 G");
        m.addMember("M63 M 50 S");
        m.addMember("M59 M 90 S");
        m.addMember("M35 M 13 S");
        m.addMember(Arrays.asList("M43 M 49 G", "M75 M 7 S", "M40 F 37 S", "M28 M 58 G"));
        m.addMember(Arrays.asList("M81 F 20 S", "M16 F 47 S", "M12 F 79 G"));
        m.placeOrder("M40", 9406, ProductCategory.PERFUME);
        m.placeOrder("M73", 9510, ProductCategory.DIGITAL_PRODUCT);
        m.placeOrder("M32", 5441, ProductCategory.LUGGAGE);
        m.placeOrder("M73", 3174, ProductCategory.SKINCARE);
        m.placeOrder("M10", 1767, ProductCategory.DRINKS);
        m.placeOrder("M12", 4721, ProductCategory.SKINCARE);
        m.placeOrder("M35", 5876, ProductCategory.JEWELRY);
        m.placeOrder("M75", 157, ProductCategory.DRINKS);
        m.placeOrder("M10", 9355, ProductCategory.SKINCARE);
        m.placeOrder("M81", 7253, ProductCategory.LUGGAGE);
        records = m.getCostByCategory();
        System.out.println(records.size());
        //assertEquals(7, records.size());
//        assertEquals("SKINCARE 3 16211", records.get(0).toString().trim());
//        assertEquals("DIGITAL_PRODUCT 1 9510", records.get(1).toString().trim());
//        assertEquals("WATCH 0 0", records.get(2).toString().trim());
//        assertEquals("JEWELRY 1 5876", records.get(3).toString().trim());
//        assertEquals("DRINKS 2 1924", records.get(4).toString().trim());
//        assertEquals("LUGGAGE 2 12694", records.get(5).toString().trim());
//        assertEquals("PERFUME 1 9406", records.get(6).toString().trim());
        tmpDouble = m.getTotalIncome();
//        assertEquals(String.format("%.2f", 55621.45), String.format("%.2f", tmpDouble));
        m.placeOrder("M28", 7066, ProductCategory.DRINKS);
        m.placeOrder("M75", 3708, ProductCategory.JEWELRY);
        m.placeOrder("M40", 9132, ProductCategory.DIGITAL_PRODUCT);
        m.placeOrder("M81", 4129, ProductCategory.PERFUME);
        m.placeOrder("M10", 826, ProductCategory.LUGGAGE);
        m.placeOrder("M32", 8656, ProductCategory.WATCH);
        m.placeOrder("M75", 7641, ProductCategory.LUGGAGE);
        m.placeOrder("M81", 6889, ProductCategory.LUGGAGE);
        m.placeOrder("M81", 2290, ProductCategory.LUGGAGE);
        m.placeOrder("M63", 430, ProductCategory.DIGITAL_PRODUCT);
//        assertEquals("GoldCardMember: M43 M 49", m.getMember("M43").toString().trim());
//        assertEquals("SilverCardMember: M35 M 13 points=195.0", m.getMember("M35").toString().trim());
//        assertEquals("GoldCardMember: M83 F 42", m.getMember("M83").toString().trim());
//        assertNull(m.getMember("M45"));
//        assertEquals("SilverCardMember: M63 M 50 points=14.0", m.getMember("M63").toString().trim());
//        assertEquals("SilverCardMember: M35 M 13 points=195.0", m.getMember("M35").toString().trim());
//        assertNull(m.getMember("M94"));
//        assertNull(m.getMember("M98"));
//        assertEquals("SilverCardMember: M75 M 7 points=254.0", m.getMember("M75").toString().trim());
//        assertNull(m.getMember("M93"));
//        assertEquals("GoldCardMember: M83 F 42", m.getMember("M83").toString().trim());
//        assertEquals("SilverCardMember: M32 M 11 points=288.0", m.getMember("M32").toString().trim());
//        assertEquals("GoldCardMember: M43 M 49", m.getMember("M43").toString().trim());
//        assertEquals("SilverCardMember: M59 M 90 points=0.0", m.getMember("M59").toString().trim());
//        assertEquals("SilverCardMember: M75 M 7 points=254.0", m.getMember("M75").toString().trim());
//        assertNull(m.getMember("M24"));
//        assertNull(m.getMember("M04"));
//        assertNull(m.getMember("M42"));
//        assertNull(m.getMember("M82"));
//        assertNull(m.getMember("M02"));
        m.placeOrder("M10", 5998, ProductCategory.LUGGAGE);
        m.placeOrder("M35", 3532, ProductCategory.DRINKS);
        m.placeOrder("M43", 3857, ProductCategory.JEWELRY);
        m.placeOrder("M59", 1298, ProductCategory.LUGGAGE);
        m.placeOrder("M75", 2149, ProductCategory.JEWELRY);
        m.placeOrder("M40", 581, ProductCategory.PERFUME);
        m.placeOrder("M35", 6606, ProductCategory.WATCH);
        m.placeOrder("M75", 2488, ProductCategory.DRINKS);
        m.placeOrder("M12", 7751, ProductCategory.LUGGAGE);
        m.placeOrder("M40", 48, ProductCategory.JEWELRY);
        m.placeOrder("M43", 4848, ProductCategory.LUGGAGE);
        m.placeOrder("M83", 4792, ProductCategory.PERFUME);
        m.placeOrder("M40", 2253, ProductCategory.WATCH);
        m.placeOrder("M36", 9870, ProductCategory.DRINKS);
        m.placeOrder("M12", 5761, ProductCategory.WATCH);
        m.placeOrder("M43", 2279, ProductCategory.PERFUME);
        m.placeOrder("M35", 6875, ProductCategory.JEWELRY);
        m.placeOrder("M32", 4363, ProductCategory.WATCH);
        m.placeOrder("M10", 6254, ProductCategory.LUGGAGE);
        m.placeOrder("M12", 4549, ProductCategory.WATCH);
        records = m.getMemberRecords("M36");
        Collections.sort(records);
        System.out.println(records.size());
//        assertEquals(1, records.size());
//        assertEquals("M36 DRINKS 9870 9233", records.get(0).toString().trim());
        records = m.getMemberRecords("M73");
        Collections.sort(records);
        System.out.println(records.size());
//        assertEquals(2, records.size());
//        assertEquals("M73 DIGITAL_PRODUCT 9510 9510", records.get(0).toString().trim());
//        assertEquals("M73 SKINCARE 3174 2857", records.get(1).toString().trim());
        records = m.getMemberRecords("M12");
        Collections.sort(records);
        System.out.println(records.size());
//        assertEquals(4, records.size());
//        assertEquals("M12 LUGGAGE 7751 7326", records.get(0).toString().trim());
//        assertEquals("M12 SKINCARE 4721 4585", records.get(1).toString().trim());
//        assertEquals("M12 WATCH 4549 4422", records.get(2).toString().trim());
//        assertEquals("M12 WATCH 5761 5535", records.get(3).toString().trim());
        records = m.getMemberRecords("M59");
        Collections.sort(records);
        System.out.println(records.size());
//        assertEquals(1, records.size());
//        assertEquals("M59 LUGGAGE 1298 1298", records.get(0).toString().trim());
        records = m.getMemberRecords("M10");
        Collections.sort(records);
        System.out.println(records.size());
//        assertEquals(5, records.size());
//        assertEquals("M10 DRINKS 1767 1767", records.get(0).toString().trim());
//        assertEquals("M10 LUGGAGE 5998 5748", records.get(1).toString().trim());
//        assertEquals("M10 LUGGAGE 6254 5979", records.get(2).toString().trim());
//        assertEquals("M10 LUGGAGE 826 826", records.get(3).toString().trim());
//        assertEquals("M10 SKINCARE 9355 8770", records.get(4).toString().trim());
        records = m.getMemberRecords("M16");
        Collections.sort(records);
        System.out.println(records.size());
//        assertEquals(0, records.size());
        records = m.getMemberRecords("M63");
        Collections.sort(records);
        System.out.println(records.size());
//        assertEquals(1, records.size());
//        assertEquals("M63 DIGITAL_PRODUCT 430 430", records.get(0).toString().trim());
        records = m.getMemberRecords("M75");
        Collections.sort(records);
        System.out.println(records.size());
//        assertEquals(5, records.size());
//        assertEquals("M75 DRINKS 157 157", records.get(0).toString().trim());
//        assertEquals("M75 DRINKS 2488 2382", records.get(1).toString().trim());
//        assertEquals("M75 JEWELRY 2149 1895", records.get(2).toString().trim());
//        assertEquals("M75 JEWELRY 3708 3703", records.get(3).toString().trim());
//        assertEquals("M75 LUGGAGE 7641 7518", records.get(4).toString().trim());
        records = m.getMemberRecords("M12");
        Collections.sort(records);
        System.out.println(records.size());
//        assertEquals(4, records.size());
//        assertEquals("M12 LUGGAGE 7751 7326", records.get(0).toString().trim());
//        assertEquals("M12 SKINCARE 4721 4585", records.get(1).toString().trim());
//        assertEquals("M12 WATCH 4549 4422", records.get(2).toString().trim());
//        assertEquals("M12 WATCH 5761 5535", records.get(3).toString().trim());
        records = m.getMemberRecords("M81");
        Collections.sort(records);
        System.out.println(records.size());
//        assertEquals(4, records.size());
//        assertEquals("M81 LUGGAGE 2290 1947", records.get(0).toString().trim());
//        assertEquals("M81 LUGGAGE 6889 6752", records.get(1).toString().trim());
//        assertEquals("M81 LUGGAGE 7253 7253", records.get(2).toString().trim());
//        assertEquals("M81 PERFUME 4129 3888", records.get(3).toString().trim());
        records = m.getCostByCategory();
        System.out.println(records.size());
//        assertEquals(7, records.size());
//        assertEquals("SKINCARE 3 16211", records.get(0).toString().trim());
//        assertEquals("DIGITAL_PRODUCT 3 18759", records.get(1).toString().trim());
//        assertEquals("WATCH 6 31247", records.get(2).toString().trim());
//        assertEquals("JEWELRY 6 21913", records.get(3).toString().trim());
//        assertEquals("DRINKS 6 23585", records.get(4).toString().trim());
//        assertEquals("LUGGAGE 11 54793", records.get(5).toString().trim());
//        assertEquals("PERFUME 5 20488", records.get(6).toString().trim());
        records = m.getMemberRecordByGenderAndAge('F', 85, 87);
        System.out.println(records.size());
//        assertEquals(0, records.size());
        records = m.getMemberRecordByGenderAndAge('M', 31, 75);
        System.out.println(records.size());
//        assertEquals(5, records.size());
//        assertEquals("M43 M 49 10734.8", records.get(0).toString().trim());
//        assertEquals("M63 M 50 430.0", records.get(1).toString().trim());
//        assertEquals("M10 M 55 23089.3", records.get(2).toString().trim());
//        assertEquals("M28 M 58 6709.4", records.get(3).toString().trim());
//        assertEquals("M36 M 75 9233.0", records.get(4).toString().trim());
        records = m.getMemberRecordByGenderAndAge('M', 74, 98);
        System.out.println(records.size());
//        assertEquals(2, records.size());
//        assertEquals("M36 M 75 9233.0", records.get(0).toString().trim());
//        assertEquals("M59 M 90 1298.0", records.get(1).toString().trim());
        records = m.getMemberRecordByGenderAndAge('F', 35, 49);
        System.out.println(records.size());
//        assertEquals(2, records.size());
//        assertEquals("M40 F 37 20773.0", records.get(0).toString().trim());
//        assertEquals("M83 F 42 4652.4", records.get(1).toString().trim());
        records = m.getMemberRecordByGenderAndAge('F', 40, 42);
        System.out.println(records.size());
//        assertEquals(1, records.size());
//        assertEquals("M83 F 42 4652.4", records.get(0).toString().trim());
        records = m.getMemberRecordByGenderAndAge('F', 1, 49);
        System.out.println(records.size());
//        assertEquals(3, records.size());
//        assertEquals("M81 F 20 19839.5", records.get(0).toString().trim());
//        assertEquals("M40 F 37 20773.0", records.get(1).toString().trim());
//        assertEquals("M83 F 42 4652.4", records.get(2).toString().trim());
//        tmpDouble = m.getTotalCost("M12");
//        assertEquals(String.format("%.2f", 21867.3), String.format("%.2f", tmpDouble));
//        tmpDouble = m.getTotalCost("M10");
//        assertEquals(String.format("%.2f", 23089.300000000003), String.format("%.2f", tmpDouble));
//        tmpDouble = m.getTotalCost("M40");
//        assertEquals(String.format("%.2f", 20773.0), String.format("%.2f", tmpDouble));
//        tmpDouble = m.getTotalCost("M16");
//        assertEquals(String.format("%.2f", 0.0), String.format("%.2f", tmpDouble));
//        tmpDouble = m.getTotalCost("M36");
//        assertEquals(String.format("%.2f", 9233.0), String.format("%.2f", tmpDouble));
//        tmpDouble = m.getTotalCost("M73");
//        assertEquals(String.format("%.2f", 12367.0), String.format("%.2f", tmpDouble));
//        tmpDouble = m.getTotalCost("M10");
//        assertEquals(String.format("%.2f", 23089.300000000003), String.format("%.2f", tmpDouble));
//        tmpDouble = m.getTotalCost("M73");
//        assertEquals(String.format("%.2f", 12367.0), String.format("%.2f", tmpDouble));
//        tmpDouble = m.getTotalCost("M10");
//        assertEquals(String.format("%.2f", 23089.300000000003), String.format("%.2f", tmpDouble));
//        tmpDouble = m.getTotalCost("M59");
//        assertEquals(String.format("%.2f", 1298.0), String.format("%.2f", tmpDouble));
//        tmpDouble = m.getTotalIncome();
//        assertEquals(String.format("%.2f", 186996.20), String.format("%.2f", tmpDouble));
    }



}
